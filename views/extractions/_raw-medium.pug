form(
  action=`/extractions/${extraction.id}/convert`,
  hx-swap="outerHTML show:none",
  hx-target="find [type='submit']",
  method="post"
)
  input(name="resourceId", type="hidden", value=rawMedium.id)
  +list
    +listItem(__("Title"))
      input.w-full.rounded-lg.border.border-gray-200.bg-white.px-5.text-gray-700(
        class="py-2.5 placeholder-gray-400/70 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:focus:border-blue-300",
        name="title",
        required,
        value=rawMedium.title || ""
      )

    +listItem(__("Duration"))
      span #{ dayjs.neatDuration(rawMedium.duration) }

    +listItem(__("Upload Date"))
      span #{ dayjs(rawMedium.upload_date).format("YYYY-MM-DD") }

    +listItem(__("Uploader"))
      - var uploader = rawMedium.channel ?? rawMedium.uploader;
      - var uploaderUrl = rawMedium.channel_url ?? rawMedium.uploader_url;
      .flex.gap-4
        span.text-gray-700(class="dark:text-gray-200") #{ uploader }
        +buttonGroup
          +buttonInGroup(
            href=uploaderUrl,
            target="_blank",
            title=__("Open External Link"),
            type="button"
          )
            i.text-xl(class="icon-[gridicons--external]")
          +buttonInGroup(
            title=__("Copy Uploader's Link"),
            type="button",
            x-bind="writeText",
            x-data=`clipboard("${uploaderUrl}")`
          )
            i.text-xl(
              :class="copying ? 'icon-[material-symbols--check]' : 'icon-[ph--copy]'"
            )

    +listItem(__("Age limit"))
      input.rounded-lg.border.border-gray-200.bg-white.px-5.text-gray-700(
        class="py-2.5 placeholder-gray-400/70 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:focus:border-blue-300",
        name="ageLimit",
        type="number",
        value=rawMedium.age_limit || 0
      )

    +listItem(__("Description"))
      textarea.max-h-60.min-h-20.w-full.overflow-y-auto.rounded-lg.border.border-gray-200.bg-white.p-2.text-gray-700(
        class="placeholder-gray-400/70 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:focus:border-blue-300",
        name="description",
        rows="5"
      ) #{ rawMedium.description }

    +listItem(__("Thumbnail"))
      .flex.flex-col.gap-2(
        @gallery-closed.window="if ($event.detail.receiverId == receiverId) thumbnail = $event.detail.image",
        x-data=`{
          thumbnails: ${JSON.stringify((rawMedium.thumbnails || []).map(payload => payload.url))},
          thumbnail: "",
          receiverId: Math.random() * 1000
        }`,
        x-init="thumbnail = thumbnails.at(0)"
      )
        input.w-full.rounded-lg.border.border-gray-200.bg-white.px-5.text-gray-700(
          class="py-2.5 placeholder-gray-400/70 focus:border-blue-400 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-40 dark:border-gray-600 dark:bg-gray-900 dark:text-gray-300 dark:focus:border-blue-300",
          name="thumbnail",
          required,
          x-model="thumbnail"
        )

        .max-w-3xl
          img.size-fit.cursor-zoom-in.bg-black.object-cover(
            :src="thumbnail",
            @click="$dispatch('open-gallery', { receiverId, images: thumbnails, image: thumbnail })",
            alt="thumbnail"
          )

  button.ml-auto.rounded.border.px-2.py-1(
    title=__("Convert extracted infomation to playable media"),
    type="submit"
  ) #{ __("Convert") }
